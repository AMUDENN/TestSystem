<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
                    x:Class="MainWindowStyle.WindowStyle">
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinWidth" Value="720"/>
        <Setter Property="MinHeight" Value="512"/>
        <Setter Property="Top" Value="30"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    NonClientFrameEdges="None"
                    GlassFrameThickness="0"
                    ResizeBorderThickness="7"
                    CaptionHeight="36"
                />
            </Setter.Value>
        </Setter>
        <EventSetter Event="Loaded" Handler="Window_Loaded"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="PART_Container" Padding="{TemplateBinding Padding}">
                        <Border.Effect>
                            <DropShadowEffect Color="Black" Opacity="0.4" BlurRadius="10" ShadowDepth="0" Direction="0"/>
                        </Border.Effect>
                        <Border x:Name="PART_Border" Style="{DynamicResource WindowBorderStyle}">
                            <Grid x:Name="PART_Content">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="36"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Stretch" Orientation="Horizontal" FlowDirection="RightToLeft"  WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Button x:Name="CloseButton" Content="r" Margin="6,0,2,0" Style="{DynamicResource CloseButtonStyle}"/>
                                    <Button x:Name="MaxRestoreButton" Content="1" Margin="2,0,2,0" Style="{DynamicResource MaxRestoreButtonStyle}"/>
                                    <Button x:Name="MinimizeButton" Content="0" Margin="2,0,2,0" Style="{DynamicResource MinimizeButtonStyle}"/>
                                    <CheckBox x:Name="ChangeThemeCheckBox" Margin="2,0,2,0" Style="{DynamicResource CheckBoxToggleSwitchStyle}"/>
                                </StackPanel>
                                <TextBlock Text="{TemplateBinding Title}" Style="{DynamicResource TitleTextBlockStyle}"/>
                                <svgc:SvgViewbox Source="/Resources/Images/Vectors/icon.svg" HorizontalAlignment="Left" VerticalAlignment="Center" Width="25" Height="25" Margin="6,0,0,0"/>
                                <ContentPresenter Grid.Row="1"/>
                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="Padding" Value="7, 7, 0, 0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource MainColor}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style x:Key="TitleTextBlockStyle" BasedOn="{StaticResource BaseTextBlockStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource DarkAdditional}"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Webdings"/>
        <Setter Property="Foreground" Value="{DynamicResource DarkAdditional}"/>
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Button_Rect" Fill="Transparent" RadiusX="6" RadiusY="6" SnapsToDevicePixels="True"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Rectangle x:Name="Button_Rect" Fill="{TemplateBinding Background}" RadiusX="6" RadiusY="6" SnapsToDevicePixels="True"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Rectangle x:Name="Button_Rect" Fill="{TemplateBinding Background}" RadiusX="6" RadiusY="6" SnapsToDevicePixels="True"/>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
                            </Grid> 
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CloseButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}">
        <EventSetter Event="Button.Click" Handler="CloseButton_Click"/>
        <Setter Property="Background" Value="{DynamicResource DarkMainColor}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="{DynamicResource White}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MaxRestoreButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}">
        <EventSetter Event="Button.Click" Handler="MaxRestoreButton_Click"/>
        <Setter Property="Background" Value="{DynamicResource LightMainColor}"/>
    </Style>
    <Style x:Key="MinimizeButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}">
        <EventSetter Event="Button.Click" Handler="MinimizeButton_Click"/>
        <Setter Property="Background" Value="{DynamicResource LightMainColor}"/>
    </Style>
    <Style x:Key="CheckBoxToggleSwitchStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Width" Value="44"/>
        <Setter Property="Height" Value="24"/>
        <EventSetter Event="Checked" Handler="ToggleSwitchChecked"/>
        <EventSetter Event="Unchecked" Handler="ToggleSwitchUnchecked"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="18"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                <SplineThicknessKeyFrame KeyTime="00:00:00.2000000" Value="1,1,1,1"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border CornerRadius="10" BorderThickness="2" BorderBrush="{DynamicResource DarkMainColor}">
                        <Grid Width="40" Height="20">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <svgc:SvgViewbox Source="/Resources/Images/Vectors/moon.svg" HorizontalAlignment="Right" Margin="3" Grid.Column="0"/>
                            <svgc:SvgViewbox Source="/Resources/Images/Vectors/sun.svg" HorizontalAlignment="Left" Margin="3" Grid.Column="1"/>
                            <Border HorizontalAlignment="Left" 
                                    x:Name="slider" 
                                    Background="{DynamicResource DarkMainColor}"
                                    Width="20" 
                                    CornerRadius="9" 
                                    RenderTransformOrigin="0.5,0.5" 
                                    Margin="1"
                                    Grid.ColumnSpan="2"
                                    Grid.Column="0">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>