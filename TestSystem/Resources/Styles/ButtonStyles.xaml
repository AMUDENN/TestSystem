<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="{DynamicResource DarkAdditional}"/>
        <Setter Property="Background" Value="{DynamicResource MainColor}"/>
        <Setter Property="Effect" Value="{DynamicResource smallShadow}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Style="{DynamicResource BaseBorderStyle}"
                                Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Style="{DynamicResource BaseBorderStyle}" BorderBrush="Transparent" BorderThickness="3" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Style="{DynamicResource BaseBorderStyle}" BorderBrush="Transparent" BorderThickness="5" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LightMainColorButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource DarkAdditional}"/>
        <Setter Property="Background" Value="{DynamicResource MainColor}"/>
    </Style>
    <Style x:Key="DarkMainColorButtonStyle" BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
        <Setter Property="Background" Value="{DynamicResource DarkMainColor}"/>
    </Style>
    <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource DarkAdditional}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Style="{DynamicResource BaseBorderStyle}"
                                Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TriggerTransparentButtonStyle" BasedOn="{StaticResource TransparentButtonStyle}" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="UnderlineTransparentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock Text="{TemplateBinding Content}" Style="{DynamicResource UnderlineTextBlockStyle}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <TextBlock Text="{TemplateBinding Content}" Style="{DynamicResource UnderlineTextBlockStyle}">
                                <TextBlock.TextDecorations>
                                    <TextDecorationCollection>
                                        <TextDecoration>
                                            <TextDecoration.Pen>
                                                <Pen Brush="{DynamicResource DarkAdditional}"/>
                                            </TextDecoration.Pen>
                                        </TextDecoration>
                                    </TextDecorationCollection>
                                </TextBlock.TextDecorations>
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <TextBlock Text="{TemplateBinding Content}" Style="{DynamicResource UnderlineTextBlockStyle}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BoldUnderlineTransparentButtonStyle" BasedOn="{StaticResource UnderlineTransparentButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
    </Style>
</ResourceDictionary>