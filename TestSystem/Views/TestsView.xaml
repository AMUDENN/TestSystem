<UserControl x:Class="TestSystem.Views.TestsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:TestSystem.Resources.Converters"
             xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:TestSystem.Views"
             mc:Ignorable="d"
             d:DesignHeight="974" d:DesignWidth="1040">
    <UserControl.Resources>
        <converters:DateTimeConverter x:Key="DateTimeConverter"/>
        <converters:ShortStringConverter x:Key="StringConverter"/>
        <converters:UniformGridColumnsConverter x:Key="ColumnsConverter"/>
    </UserControl.Resources>
    <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Loaded">
            <Behaviors:InvokeCommandAction Command="{Binding LoadedCommand}" PassEventArgsToCommand="True"/>
        </Behaviors:EventTrigger>
    </Behaviors:Interaction.Triggers>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="180"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Список тестов" Style="{DynamicResource HeadingTextBlockStyle}" VerticalAlignment="Center" Margin="20, 0, 0, 0" Grid.Column="0"/>
            <Button Command="{Binding AddCommand}"
                    Style="{DynamicResource LightMainColorButtonStyle}" 
                    Opacity="0.9" Grid.Column="1">
                <Grid Margin="20, 10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <Image Style="{DynamicResource AddImage}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0"/>
                    <TextBlock Text="Добавить" Style="{DynamicResource CommonTextBlockStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="20" Grid.Column="1"/>
                </Grid>
            </Button>
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Margin="20, 0, 0, 0" Grid.Column="0">
                <ComboBox ItemsSource="{Binding TestStatuses, Mode=OneWay}" SelectedItem="{Binding SelectedTestStatus}"/>
                <ComboBox ItemsSource="{Binding TestOrderType, Mode=OneWay}" SelectedItem="{Binding SelectedTestOrderType}"/>
                <ComboBox ItemsSource="{Binding TestOrder, Mode=OneWay}" SelectedItem="{Binding SelectedTestOrder}"/>
            </StackPanel>
            <TextBox x:Name="FilterTextBox" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Height="40" Grid.Column="1"/>
        </Grid>
        
        <ListView ItemsSource="{Binding DisplayedTests, Mode=OneWay}"
                  Style="{DynamicResource ListViewStyle}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                  Grid.Row="4">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}, 
                                                   Path=ActualWidth, 
                                                   ConverterParameter=260, 
                                                   Converter={StaticResource ColumnsConverter}}"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Grid>
                                    <ContentPresenter x:Name="PART_ContentHost" VerticalAlignment="Top" MinWidth="260"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Style="{DynamicResource GridShadowStyle}">
                        <Border Style="{DynamicResource AccentBorderStyle}" Margin="10" Width="240" Height="300">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="250"/>
                                    <RowDefinition Height="50"/>
                                </Grid.RowDefinitions>

                                <Grid Margin="10" Grid.Row="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="10"/>
                                        <RowDefinition Height="70"/>
                                        <RowDefinition Height="120"/>
                                        <RowDefinition Height="10"/>
                                    </Grid.RowDefinitions>

                                    <StackPanel x:Name="Menu" Background="Transparent" Visibility="Hidden" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="0">
                                        <Button Style="{DynamicResource TriggerTransparentButtonStyle}"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.EditCommand}"
                                            CommandParameter="{Binding}"
                                            Margin="10, 5">
                                            <Image Style="{DynamicResource EditPenImage}"/>
                                        </Button>
                                        <Button Style="{DynamicResource TriggerTransparentButtonStyle}"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.CopyCommand}"
                                            CommandParameter="{Binding}"
                                            Margin="10, 5">
                                            <Image Style="{DynamicResource CopyImage}"/>
                                        </Button>
                                        <Button Style="{DynamicResource TriggerTransparentButtonStyle}" 
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.DeleteCommand}"
                                            CommandParameter="{Binding}"
                                            Margin="10, 5, 0, 5">
                                            <Image Style="{DynamicResource TrashCanImage}"/>
                                        </Button>
                                    </StackPanel>

                                    <Button Content="{Binding Title, ConverterParameter=70, Converter={StaticResource StringConverter}}" Style="{DynamicResource BoldUnderlineTransparentButtonStyle}" VerticalAlignment="Top" Grid.Row="2"/>
                                    <TextBlock Text="{Binding Description, ConverterParameter=90, Converter={StaticResource StringConverter}}" Style="{DynamicResource CommonTextBlockStyle}" Grid.Row="3"/>
                                </Grid>

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="30"/>
                                        <ColumnDefinition Width="70"/>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="10"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Style="{DynamicResource BottomRoundingBorderStyle}" Opacity="0.6" Grid.ColumnSpan="6" Grid.Column="0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0, 1">
                                                <GradientStop Color="{DynamicResource SecondGradientColor}" Offset="0" />
                                                <GradientStop Color="{DynamicResource FirstGradientColor}" Offset="2" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>

                                    <CheckBox Style="{DynamicResource LockCheckBoxStyle}" IsChecked="{Binding Path=IsOpen, Mode=OneWay}" Margin="5" Grid.Column="1"/>

                                    <Grid Grid.Column="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30"/>
                                            <ColumnDefinition Width="40"/>
                                        </Grid.ColumnDefinitions>
                                        <Image Style="{DynamicResource PeoplesImage}" Margin="5" Grid.Column="0"/>
                                        <TextBlock Text="{Binding ResultsCount}" Style="{DynamicResource CommonTextBlockStyle}" Margin="2, 0, 0, 0" Grid.Column="1"/>
                                    </Grid>
                                    <TextBlock Text="{Binding DateCreation, Converter={StaticResource DateTimeConverter}}" Style="{DynamicResource CommonTextBlockStyle}" TextAlignment="Right" HorizontalAlignment="Right" Grid.Column="3"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                    <DataTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="Menu" Value="Visible"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="0.6"
                                To="1"
                                Duration="0:0:0.50" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ListView>
    </Grid>
</UserControl>
